@startuml demo

set namespaceSeparator ::

namespace io {
    class ResourceReader
    ui::SceneLoading -left-> ResourceReader
}

namespace ui {

    class SceneLoading
    class SceneMenu
    class SceneVisualizer

    class CodeTracker #wheat
    class Monitor #wheat
    class Controller #wheat

    interface Layout #LightBlue

    SceneLoading -right[hidden]-> SceneMenu
    SceneMenu -right[hidden]-> SceneVisualizer

    SceneVisualizer *-- CodeTracker
    SceneVisualizer *-- Monitor
    SceneVisualizer *-right- Controller

    Monitor -right[hidden]-> CodeTracker
    SceneLoading -down[hidden]-> Layout

    Controller *-right- PanelConsole

}

allowmixing
package ui::control {
    class AnimationController
    class BatchProcssor
    class MethodTrigger
    class MethodTriggers
    class OutputBox
    MethodTriggers *-> MethodTrigger
    OutputBox -down[hidden]-> MethodTriggers
}
ui::PanelConsole -right-|> ui::control

namespace visualized {
    abstract class VDS #wheat
    VDS --|> VisualizedXXX
}

namespace visual {

    abstract class Visual
    abstract class VisualNode

    Visual --|> VisualNode
    Visual --|> VisualXXX

    VisualNode --|> VisualXXXNode

    VisualXXX *-- VisualXXXNode

}

namespace custom {
    class VisualizedXXX
}

class Main

class Director #LightBlue
class Global #LightBlue

Main o-- ui::SceneLoading
Main o-- ui::SceneMenu
Main o-- ui::SceneVisualizer

ui::SceneVisualizer *-- visualized::VDS
ui::Controller -down-> visualized::VDS
visualized::VDS -up-> ui::Monitor
visualized::VDS -up-> ui::CodeTracker

ui::Monitor *-- visual::Visual

visualized::VDS .left. visual::Visual

visualized::VDS --|> custom::VisualizedXXX

@enduml